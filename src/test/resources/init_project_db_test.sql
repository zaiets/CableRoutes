CREATE SCHEMA IF NOT EXISTS CABLEROUTES_TEST;

CREATE TABLE IF NOT EXISTS JOIN_POINT (
  KKS VARCHAR(48) PRIMARY KEY NOT NULL,
  X   DOUBLE,
  Y   DOUBLE,
  Z   DOUBLE
);

CREATE TABLE IF NOT EXISTS JOURNAL (
  KKS  VARCHAR(48) PRIMARY KEY NOT NULL,
  FILE LONGBLOB
);

CREATE TABLE IF NOT EXISTS ROUTE_TYPE (
  MARKER VARCHAR(24) PRIMARY KEY NOT NULL,
  NAME   VARCHAR(128)
);

CREATE TABLE IF NOT EXISTS EQUIPMENT (
  FULL_NAME      VARCHAR(128) PRIMARY KEY NOT NULL,
  KKS            VARCHAR(64),
  ADD_LENGTH     INT,
  X              DOUBLE,
  Y              DOUBLE,
  Z              DOUBLE,
  JOIN_POINT_KKS VARCHAR(48),
  FOREIGN KEY (JOIN_POINT_KKS) REFERENCES JOIN_POINT (KKS)
);

CREATE TABLE IF NOT EXISTS ROUTE (
  KKS                   VARCHAR(48) PRIMARY KEY NOT NULL,
  ROUTE_TYPE_MARKER     VARCHAR(24),
  LENGTH                DOUBLE,
  HEIGHT                DOUBLE,
  SHELVES_COUNT         INT,
  FIRST_JOIN_POINT_KKS  VARCHAR(48),
  SECOND_JOIN_POINT_KKS VARCHAR(48),
  FOREIGN KEY (FIRST_JOIN_POINT_KKS) REFERENCES JOIN_POINT (KKS),
  FOREIGN KEY (SECOND_JOIN_POINT_KKS) REFERENCES JOIN_POINT (KKS),
  FOREIGN KEY (ROUTE_TYPE_MARKER) REFERENCES ROUTE_TYPE (MARKER)
);

CREATE TABLE IF NOT EXISTS LINE (
  ID                   INT     AUTO_INCREMENT PRIMARY KEY,
  START_JOIN_POINT_KKS VARCHAR(48),
  END_JOIN_POINT_KKS   VARCHAR(48),
  TRACED               BOOLEAN DEFAULT FALSE,
  FOREIGN KEY (START_JOIN_POINT_KKS) REFERENCES JOIN_POINT (KKS),
  FOREIGN KEY (END_JOIN_POINT_KKS) REFERENCES JOIN_POINT (KKS)
);

CREATE TABLE IF NOT EXISTS CABLE (
  #line part
  ID                   INT,
  START_JOIN_POINT_KKS VARCHAR(48),
  END_JOIN_POINT_KKS   VARCHAR(48),
  TRACED               BOOLEAN DEFAULT FALSE,
  #cable part
  KKS                  VARCHAR(48) PRIMARY KEY NOT NULL,
  JOURNAL_KKS          VARCHAR(48)             NOT NULL,
  NUMBER_IN_JOURNAL    INT,
  TYPE                 VARCHAR(48),
  DIMENSIONS           VARCHAR(48),
  EQUIPMENT_START_NAME VARCHAR(128),
  EQUIPMENT_END_NAME   VARCHAR(128),
  RESERVING            VARCHAR(48),
  LENGTH               INT,

  FOREIGN KEY (ID) REFERENCES LINE (ID)
    ON DELETE SET NULL,
  FOREIGN KEY (START_JOIN_POINT_KKS) REFERENCES JOIN_POINT (KKS),
  FOREIGN KEY (END_JOIN_POINT_KKS) REFERENCES JOIN_POINT (KKS),
  FOREIGN KEY (EQUIPMENT_START_NAME) REFERENCES EQUIPMENT (FULL_NAME),
  FOREIGN KEY (EQUIPMENT_END_NAME) REFERENCES EQUIPMENT (FULL_NAME),
  FOREIGN KEY (JOURNAL_KKS) REFERENCES JOURNAL (KKS)
);

CREATE TABLE IF NOT EXISTS LINES_ROUTES (
  ROUTE_KKS VARCHAR(48) NOT NULL,
  LINE_ID   INT         NOT NULL,
  FOREIGN KEY (ROUTE_KKS) REFERENCES ROUTE (KKS),
  FOREIGN KEY (LINE_ID) REFERENCES LINE (ID),
  UNIQUE (LINE_ID, ROUTE_KKS)
);

#test entities
INSERT INTO ROUTE_TYPE (MARKER, NAME) VALUES ('B', 'Короба');
INSERT INTO ROUTE_TYPE (MARKER, NAME) VALUES ('L', 'Лотки и конструкции');
INSERT INTO ROUTE_TYPE (MARKER, NAME) VALUES ('T', 'Труба или патрубок');
INSERT INTO ROUTE_TYPE (MARKER, NAME) VALUES ('C', 'Железобетонный лоток');
INSERT INTO ROUTE_TYPE (MARKER, NAME) VALUES ('G', 'Траншея в земле');
INSERT INTO ROUTE_TYPE (MARKER, NAME) VALUES ('P', 'Открытая прокладка');
INSERT INTO JOIN_POINT (KKS, X, Y, Z) VALUES ('Point_Test_1', -1, 2, 3.5);
INSERT INTO JOIN_POINT (KKS, X, Y, Z) VALUES ('Point_Test_2', -2, 4, 7);
INSERT INTO JOIN_POINT (KKS, X, Y, Z) VALUES ('Point_Test_3', -3, 6, 10.5);
INSERT INTO EQUIPMENT (FULL_NAME, KKS, ADD_LENGTH, JOIN_POINT_KKS, X, Y, Z)
VALUES ('Test_equip_1', 'equip_1', 2, 'Point_Test_1', -2, 2, 4.5);
INSERT INTO EQUIPMENT (FULL_NAME, KKS, ADD_LENGTH, JOIN_POINT_KKS, X, Y, Z)
VALUES ('Test_equip_2', 'equip_2', 4, 'Point_Test_2', -3, 4, 8);
INSERT INTO EQUIPMENT (FULL_NAME, KKS, ADD_LENGTH, JOIN_POINT_KKS, X, Y, Z)
VALUES ('Test_equip_3', 'equip_3', 4, NULL, -3, 5, 10);
INSERT INTO ROUTE (KKS, ROUTE_TYPE_MARKER, LENGTH, HEIGHT, SHELVES_COUNT, FIRST_JOIN_POINT_KKS, SECOND_JOIN_POINT_KKS)
VALUES ('Route_1', 'B', 17, 5, 2, 'Point_Test_1', 'Point_Test_2');
INSERT INTO ROUTE (KKS, ROUTE_TYPE_MARKER, LENGTH, HEIGHT, SHELVES_COUNT, FIRST_JOIN_POINT_KKS, SECOND_JOIN_POINT_KKS)
VALUES ('Route_2', 'T', 13, 2, 3, 'Point_Test_2', 'Point_Test_3');
INSERT INTO JOURNAL (KKS, FILE) VALUES ('Journal_test_1', NULL);
INSERT INTO LINE (START_JOIN_POINT_KKS, END_JOIN_POINT_KKS)
VALUES ('Point_Test_1', 'Point_Test_2');
INSERT INTO CABLE (ID, START_JOIN_POINT_KKS, END_JOIN_POINT_KKS, TRACED, KKS, JOURNAL_KKS, NUMBER_IN_JOURNAL, TYPE,
                   DIMENSIONS, EQUIPMENT_START_NAME, EQUIPMENT_END_NAME, RESERVING, LENGTH)
VALUES (1, 'Point_Test_1', 'Point_Test_2', FALSE, 'Cable_test', 'Journal_test_1', 1, 'ВВГнг', '4x4', 'Test_equip_1', 'Test_equip_2', 'None', 0);



